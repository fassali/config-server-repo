#server.port 9001

#d√©fini l'encodage pour data.sql
spring.datasource.sql-script-encoding=UTF-8

#Eureka
eureka.client.serviceUrl.defaultZone: http://localhost:9102/eureka/


## ===============================
## = DATA SOURCE == PostgreSQL  ==
## ===============================
## Set here configurations for the database connection
#spring.datasource.url=jdbc:postgresql://localhost:5432/gatewaydb?createDatabaseIfNotExist=true
#spring.datasource.username= gateway
#spring.datasource.password= gateway
#spring.datasource.driver-class-name=org.postgresql.Driver
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
## ===============================
## = JPA / HIBERNATE
## ===============================
## Show or not log for each sql query
#spring.jpa.show-sql=true
## Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
## schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.generate-ddl=true
## Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults= false
##spring.jpa.properties.hibernate.default_schema=public
#hibernate.jdbc.lob.non_contextual_creation=true

# ===============================
# == DATA SOURCE =====  H2  =====
# ===============================
spring.jpa.show-sql=true
spring.h2.console.enabled=true


# Microservice configurations
mes-configs.limitUsers= 4
